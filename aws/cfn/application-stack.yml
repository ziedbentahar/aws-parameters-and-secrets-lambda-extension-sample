AWSTemplateFormatVersion: "2010-09-09"
Description: my awesome weather app

Parameters:
  DeploymentBucketName:
    Type: String  
  GetWeatherAndAirQualityLambdaZipFile:
    Type: String
  Environment:
    Type: String
    AllowedValues:
      - dev
      - stage
      - prod

Resources:
  GetWeatherAndAirQualityLambda:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: ./components/get-weather-and-air-quality-lambda.yml
      Parameters:
        Application: awesome-weather
        Environment: !Ref Environment
        LambdaName: get-weather-and-air-quality-lambda
        LambdaHandler: index.handler
        LambdaBucketName: !Ref DeploymentBucketName
        LambdaZipFile: !Ref GetWeatherAndAirQualityLambdaZipFile
        OpenWeatherApiKeySecretArn: !GetAtt OpenWeatherSecret.Outputs.OpenWeatherApiKeySecretArn
        OpenWeatherApiKeySecretName: !GetAtt OpenWeatherSecret.Outputs.OpenWeatherApiKeySecretName

  ApiGatewaty:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: ./components/api-gatewat.yml
      Parameters:
        Application: awesome-weather
        Environment: !Ref Environment
        GetWeatherAndAirQualityLambdaArn: !GetAtt GetWeatherAndAirQualityLambda.Outputs.LambdaFunctionArn

  OpenWeatherSecret: 
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./components/open-weather-api-key-secret.yml


      
        